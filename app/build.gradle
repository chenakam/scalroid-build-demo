plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'cash.bdo.scalroid'
}

/**
 * Set this to true to create two separate APKs instead of one:
 *   - An APK that only works on ARM devices
 *   - An APK that only works on x86 devices
 * The advantage is the size of the APK is reduced by about 4MB.
 * Upload all the APKs to the Play Store and people will download
 * the correct one based on the CPU architecture of their device.*/
def enableSeparateBuildPerCPUArchitecture = true
// Run Proguard to shrink the Java bytecode in release builds.
def enableProguardInReleaseBuilds = true

android {
//    scalroid.scala.zincVersion = '1.3.5'
//    scalroid {
//        scala.zincVersion.set('1.3.5')
//        message = 'Hi'
//        greeter = 'Gradle'
//    }

    namespace 'com.example.demomaterial3'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.demomaterial3"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            //abiFilters "armeabi-v7a"
        }
    }
    packagingOptions {
        resources {
            excludes += ['rootdoc.txt', 'META-INF/com.android.tools/proguard/coroutines.pro', 'META-INF/MANIFEST.MF', 'META-INF/proguard/coroutines.pro', 'org/apache/commons/codec/language/bm/sep_rules_french.txt']
        }
    }
    signingConfigs {
        release {
            String kStoreFile = System.getenv("KEY_STORE_FILE")
            boolean useDebugConf = kStoreFile == null
            println("---------->>> signingConfigs.release | useDebugConf: $useDebugConf")
            storeFile file(useDebugConf ? KEYSTORE_FILE : kStoreFile)
            storePassword useDebugConf ? KEYSTORE_STOREPWD : System.getenv("KEY_STORE_STORE_PWD")
            keyAlias useDebugConf ? KEYSTORE_ALIAS : System.getenv("KEY_STORE_KEY_ALIAS")
            keyPassword useDebugConf ? KEYSTORE_PASSWORD : System.getenv("KEY_STORE_KEY_PWD")
            v2SigningEnabled true
        }
        debug {
            println("---------->>> signingConfigs.debug")
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_STOREPWD
            keyAlias KEYSTORE_ALIAS
            keyPassword KEYSTORE_PASSWORD
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            shrinkResources true
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles /*getDefaultProguardFile('proguard-android-optimize.txt'),*/ 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
    }
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets']
            // 直接内置在代码中（不用担心会串源码，有默认的过滤器）
            //java.srcDirs += ['src/main/scala']
            //kotlin.srcDirs += ['src/main/scala']
            //scala.srcDirs += ['src/main/java']
        }
    }
    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false  // If true, also generate a universal APK
            include "armeabi-v7a", "arm64-v8a" //, "x86", "x86_64"
        }
    }

    flavorDimensions "version" //, "xxx"
    productFlavors {
        github {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.

//            dimension "version"
//            applicationIdSuffix ".github"
//            versionNameSuffix "-github"

            // https://developer.android.com/studio/build/manifest-build-variables
            manifestPlaceholders = [XXX_VALUE: "xxx"]
        }
        googleplay {
//            dimension "version"
//            applicationIdSuffix ".goplay"
//            versionNameSuffix "-goplay"

            manifestPlaceholders = [XXX_VALUE: "xxx"]
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

buildOutputs { outputs ->
    outputs.all { output ->
//        def variantName = output.name.capitalize()
//        def outputFileName = "${project.name}-${variantName}.apk"
//        output.outputFile = new File(output.outputFile.parent, outputFileName)
    }
}

dependencies {
    ////////// ////////// ////////// ////////// ////////// 便于看 android gradle 插件的源码 ////////// ////////// ////////// ////////// //////////
    // 注意：implementation 的 version 字段要与 id 'xxx' 的 version 保持一致（这在项目根目录下的`build.gradle`）。
    // id 'com.android.application' version '7.3.1' apply false
    // id 'org.jetbrains.kotlin.android' version '1.7.20' apply false

    // 这行不需要，External Libraries 下第一个就是`gradle-api-xxx.jar`。
    //implementation gradleApi()

    // 为了能够从 android gradle 插件的源码中链接到这些依赖。不过只更新到 6.1.1 了，原因不详。
    // https://repo.gradle.org/gradle/libs-releases-local/org/gradle/gradle-core-api/6.1.1/
//    compileOnly 'org.gradle:gradle-core-api:6.1.1'

    // https://mvnrepository.com/artifact/com.android.tools.build/gradle
//    implementation 'com.android.tools.build:gradle:7.3.1'
//    implementation 'org.jetbrains.kotlin.android:org.jetbrains.kotlin.android.gradle.plugin:1.7.20'
//    implementation 'org.jetbrains.kotlin:kotlin-build-common:1.7.20'
    ////////// ////////// ////////// ////////// ////////// ////////// ////////// ////////// ////////// ////////// ////////// ////////// //////////

//    implementation 'com.google.guava:guava:31.0.1-jre'

    implementation "androidx.core:core-ktx:$ktx.Version"
    implementation 'androidx.appcompat:appcompat:1.5.0'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.github.bdo-cash:annoid:af2b53cfce'
    // Scala 3
    // https://mvnrepository.com/artifact/org.scala-lang/scala3-library
//    implementation 'org.scala-lang:scala3-library_$scala3.Binary:$scala3.Version'
//    testImplementation 'org.scalatest:scalatest_$scala3.Binary:3.2.12'
//    testImplementation 'org.scalatestplus:junit-4-13_$scala3.Binary:3.2.12.0'
//    testRuntimeOnly 'org.scala-lang.modules:scala-xml_$scala3.Binary:2.1.0'

    // Scala 2
    implementation "org.scala-lang:scala-library:$scala2.Version"
    testImplementation "org.scalatest:scalatest_$scala2.Binary:3.2.10"
    testImplementation "org.scalatestplus:junit-4-13_$scala2.Binary:3.2.2.0"
    testRuntimeOnly "org.scala-lang.modules:scala-xml_$scala2.Binary:1.3.0"
}
